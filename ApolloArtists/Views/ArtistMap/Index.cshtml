@using Microsoft.CodeAnalysis
@model ArtistMapViewModel

<div id="artistMap" class="col-lg-12"></div>

<button type="button" class="center-block btn btn-default btn-lg" data-toggle="modal" data-target="#myModal">Add Artist</button>

<div id="artistPanel" class="sidenav">
    <h2></h2>
    <iframe id="player" src="" width="350" height="75%" frameborder="0" allowtransparency="true" allow="encrypted-media"></iframe>
    <button id="likeButton" type="button" class="btn btn-primary btn-lg">Like</button>
    <button id="passButton" type="button" class="btn btn-danger btn-lg">Pass</button>
</div>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Artist</h4>
            </div>

            <div class="modal-body">
                <div class="dropdown " action="@Url.Action("Search", "ArtistMap")">
                    <input id="searchForm" class="form-control" type="text" name="search"><br>
                </div>
                <div class="center-block text-center col-lg-4 no-float" id="suggestions"></div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>


@section Scripts 
{
    <link href="lib/vis/vis.min.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="lib/vis/vis.min.js"></script>
    <script type="text/javascript">
        var nodes = new vis.DataSet([
            @{int i = 1;}
            @foreach (var node in Model.ArtistNodes)
            {
                <text>
                {
                    id: @i, shape: "circularImage",
                    label: "@Html.Raw(node.Name)",
                    text: "@node.Href",
                    image: "@node.Image",
                    @if (node.Liked) {
                        <text>
                            size: 35
                        </text>
                    }
                },
                </text>
                i++;
            }
        ]);
        var edges = new vis.DataSet([
            @foreach (var edge in Model.EdgeTuples)
            {
                <text>
                    { from: @edge.from, to: @edge.to },
                </text>
            }
        ]);
        var container = document.getElementById('artistMap');
        var data = {
            nodes: nodes,
            edges: edges
        };
        var options = {
            nodes: {
                borderWidth: 1,
                color: {
                    border: "#000000"
                }
            },
            "physics": {
                "forceAtlas2Based": {
                    "avoidOverlap": 0.8
                }
            }
        };
        var network = new vis.Network(container, data, options);
        network.on("selectNode", function (params) {
            var clickedNode = nodes.get(params['nodes'][0]);

            clickedNode.color = {
                border: '#1db954'
            }

            nodes.update(clickedNode);

            openNav();
            $("#artistPanel>h2").text(clickedNode.label);
            $("#player").attr("src", "https://open.spotify.com/embed/artist/" + clickedNode.text.split('/')[5]);
            $("#likeButton").on("click", function() {
                var query = {
                    href: clickedNode.text,
                    image: clickedNode.image,
                    name: clickedNode.label
                };
                var queryString = $.param(query);
                window.location.href = '@Url.Action("LikeArtist", "ArtistMap")?' + queryString;
            });
            $("#passButton").on("click", function () {
                var query = {
                    href: clickedNode.text,
                    image: clickedNode.image,
                    name: clickedNode.label
                };
                var queryString = $.param(query);
                window.location.href = '@Url.Action("PassArtist", "ArtistMap")?' + queryString;
            });
        });
        network.on("deselectNode", function (params) {
            closeNav();

            var clickedNode = nodes.get(params['previousSelection']['nodes'][0]);

            clickedNode.color = {
                border: '#000000'
            }

            nodes.update(clickedNode);

        });
        function openNav() {
            $("#artistPanel").width("350px");
        }
        function closeNav() {
            $("#artistPanel").width("0px");
        }

        $('#searchForm').autocomplete({
            appendTo: "#suggestions",
            autoFocus: false,
            delay: 500,
            minLength: 0,
            classes: { "ui-autocomplete": "highlight" },
            source: function (request, response) {
                $.post(
                    "@Url.Action("SearchForArtist", "ArtistMap")",
                    { searchInput: request.term },
                    function (data) {
                        response(data);
                    }
                );
            },
            select: function (event, ui) {
                var query = {
                    href: ui.item.href,
                    image: ui.item.image,
                    name: ui.item.name
                };
                var queryString = $.param(query);
                window.location.href = '@Url.Action("LikeArtist", "ArtistMap")?' + queryString;
            }
        }).autocomplete( "instance" )._renderItem = function( ul, item ) {
            return $("<div>").append("<img src=" + item.image + "><p>" + item.name + "</p>").appendTo(ul);
        };

    </script>
}